# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - main

stages:
  - stage: Build
    displayName: 'Build stage'
    jobs:
      - job: Build
        displayName: 'Build'
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '18.x'
            displayName: 'Install Node.js'

          - script: |
              npm ci --legacy-peer-deps
              npm run build
            displayName: 'npm install and build'

          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/build/'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            artifact: 'drop'

  - stage: Deploy
    displayName: 'Deploy stage'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Deploy
        displayName: 'Deploy'
        environment: Dev
        pool:
          vmImage: ubuntu-latest
        strategy:
          runOnce:
            deploy:
              steps:
                - task: ExtractFiles@1
                  inputs:
                    archiveFilePatterns: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
                    destinationFolder: '$(Pipeline.Workspace)/extracted'
                    cleanDestinationFolder: true

                - script: |
                    if [ -d "$(Pipeline.Workspace)/extracted/subfolder" ]; then
                      mv $(Pipeline.Workspace)/extracted/subfolder/* $(Pipeline.Workspace)/extracted/
                    fi

                - task: AzureWebApp@1
                  displayName: 'Deploy to Azure Web App'
                  inputs:
                    azureSubscription: 'Azure Subscription 1'
                    appType: 'webAppLinux'
                    appName: 'react-app-mattamy'
                    package: '$(Pipeline.Workspace)/extracted'
